<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.freesofts.desktop.mapper.PageCategoryMapper">
    <sql id="WHERE_IF">
        <if test="queryVO.name != null and queryVO.name != ''">
            and `name` like concat("%",#{queryVO.name},"%")
        </if>
        <if test="queryVO.categoryId != null and queryVO.categoryId != ''">
            and category_id = #{queryVO.categoryId}
        </if>
        <if test="queryVO.tenantId != null and queryVO.tenantId != ''">
            and tenant_id = #{queryVO.tenantId}
        </if>
    </sql>

    <insert id="insert">
        insert into desktop_category (id, name, sort, unique_code, description, created_by, creator_name, created_date,
                                      parent_id, level_code, tenant_id)
        values (#{category.id}, #{category.name}, #{category.sort}, #{category.uniqueCode}, #{category.description},
                #{category.createdBy}, #{category.creatorName}, #{category.createdDate}, #{category.parentId},
                #{category.levelCode}, #{category.tenantId})
    </insert>
    <delete id="deleteByIds">
        delete from desktop_category where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and id not in
        ('cbae65182c824959915223d9bfe2cdb9','e0a102bb9a2f481f82b09e6a31568ec3','25ebeed664df42a59eff2996d8c35aa7')
    </delete>

    <delete id="deleteCategorys">
        delete from desktop_category where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and id not in
        ('cbae65182c824959915223d9bfe2cdb9','e0a102bb9a2f481f82b09e6a31568ec3','25ebeed664df42a59eff2996d8c35aa7')
    </delete>
    <delete id="deleteByLevelCodes">
        <foreach item="code" collection="levelCodes" separator=";">
            delete from desktop_category where level_code like concat('%',#{code},'%')
        </foreach>
    </delete>

    <select id="categoryList" resultType="com.freesofts.model.model.Category">
        select id, name, sort
        from desktop_category
    </select>
    <select id="selectPLevelCode" resultType="java.lang.String">
        select level_code
        from desktop_category
        where id = #{pid}
    </select>
    <select id="selectCLevelCodes" resultType="java.lang.String">
        select level_code
        from desktop_category
        where parent_id = #{pid}
    </select>
    <select id="selectTreeByLevelCode" resultType="com.freesofts.common.dto.BasicNodeDto">
        select id ,parent_id as parentId, name as title ,
        (select count(0) from desktop_category as tmp where tmp.parent_id = dc.id) as childSize
        from desktop_category as dc
        <where>
            <choose>
                <when test="pid != 'root'">
                    dc.parent_id = #{pid}
                    <if test="tenantId != null and tenantId != ''">
                        and tenant_id = #{tenantId}
                    </if>
                </when>
                <otherwise>
                    dc.parent_id = 'root'
                </otherwise>
            </choose>
        </where>
        order by dc.sort
    </select>
    <select id="selectList" resultType="com.freesofts.model.model.Category">
        select id, name, sort, unique_code, description, created_by, creator_name, created_date, last_modified_by,
        last_modified_name, last_modified_date, parent_id, level_code
        from desktop_category
        where level_code like concat(#{levelCode},'%')
        and length(level_code) = #{length}
        <include refid="WHERE_IF"/>
        order by sort
        limit #{pageStart},#{pageSize}
    </select>
    <select id="selectCount" resultType="java.lang.Long">
        select count(0) from desktop_category
        where level_code like concat(#{levelCode},'%')
        and length(level_code) = #{length}
        <include refid="WHERE_IF"/>
    </select>
    <select id="selectCountByKeyword" resultType="java.lang.Long">
        select count(0)
        from (
                 with recursive tree as (
                     select temp.*
                     from desktop_category temp
                     where id = #{pid}
                     union all
                     select middle.*
                     from desktop_category middle
                              inner join tree on tree.id = middle.parent_id
                 )
                 select *
                 from tree
             ) as t
        where t.name like concat('%', #{keyword}, '%')
    </select>

    <!-- id: 唯一标识，title：树节点标题，level_code：层级编码，childSize：子节点长度 -->
    <select id="selectPageListByKeyword" resultType="java.util.Map">
        select id,
               name                                                           as title,
               level_code,
               (select count(0) from desktop_category where parent_id = t.id) as childSize
        from (
                 with recursive tree as (
                     select temp.*
                     from desktop_category temp
                     where id = #{pid}
                     union all
                     select middle.*
                     from desktop_category middle
                              inner join tree on tree.id = middle.parent_id
                 )
                 select *
                 from tree
             ) as t
        where name like concat('%', #{keyword}, '%')
        order by sort, created_date desc, id
        limit #{pagestart}, #{pagesize}
    </select>

    <!-- levelCode: 层级编码，title：树节点标题 -->
    <select id="selectPosiForKeyword" resultType="java.util.Map">
        select level_code as levelCode, name as title from desktop_category where level_code in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectById" resultType="com.freesofts.model.model.Category">
        select id,
               name,
               sort,
               unique_code,
               description,
               created_by,
               creator_name,
               created_date,
               last_modified_by,
               last_modified_name,
               last_modified_date,
               parent_id
        from desktop_category
        where id = #{id}
    </select>
    <select id="selectLevelCodeById" resultType="java.lang.String">
        select level_code
        from desktop_category
        where id = #{id}
    </select>
    <select id="selectNameById" resultType="java.util.HashMap">
        SELECT b.id, b.name, b.unique_code
        FROM (
                 SELECT @ids                          AS _ids,
                        (SELECT @ids := GROUP_CONCAT(parent_id)
                         FROM desktop_category
                         WHERE FIND_IN_SET(id, @ids)) AS cids
                 FROM desktop_category,
                      (SELECT @ids := #{id}) b
                 WHERE @ids IS NOT NULL
             ) a,
             desktop_category b
        WHERE FIND_IN_SET(b.id, a._ids)
        ORDER BY level_code
    </select>
    <select id="selectLevelCodes" resultType="java.lang.String">
        select level_code from desktop_category where id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>


    <update id="update">
        update desktop_category
        <set>
            <if test="category.name != null and category.name != ''">
                name = #{category.name},
            </if>
            <if test="category.sort != null and category.sort != ''">
                sort = #{category.sort},
            </if>
            <if test="category.description != null and category.description != ''">
                `description` = #{category.description}
            </if>
        </set>
        where id = #{category.id}
    </update>
</mapper>